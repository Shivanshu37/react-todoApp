{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","variant","onClick","collection","doc","id","set","merge","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","cursor","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","htmlFor","Input","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2070e0cd.chunk.js","sourcesContent":["  import firebase from \"firebase\";\r\n\r\n  const firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAdrwKIz274X90LdfaPN3NKm5bSwJ5WyL0\",\r\n    authDomain: \"todo-app-4df84.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-4df84-default-rtdb.firebaseio.com\",\r\n    projectId: \"todo-app-4df84\",\r\n    storageBucket: \"todo-app-4df84.appspot.com\",\r\n    messagingSenderId: \"959839749993\",\r\n    appId: \"1:959839749993:web:69e01619d39fcd34f45ff8\",\r\n    measurementId: \"G-TCY1DHW0S4\"\r\n  });\r\n  const db = firebaseApp.firestore();\r\n  export default db;  ","import { List,ListItem,ListItemAvatar,ListItemText,Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Todo.css';\r\nimport db from './firebase';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    const [input,setInput] = useState();\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const updateTodo = () => {\r\n          db.collection('todos').doc(props.todo.id).set({\r\n          todo:input,\r\n          },{merge:true})\r\n           setOpen(false);\r\n      }\r\n    return (\r\n        <>\r\n              <Modal\r\n        open={open}\r\n        onClose={e => setOpen(false)}>\r\n            <div className={classes.paper}>\r\n              <h1>Open</h1>\r\n              <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\r\n              <Button variant=\"contained\" onClick={updateTodo}>Update Todo</Button>\r\n            </div>\r\n        </Modal>\r\n\r\n        <List className=\"TodoList\">\r\n        <ListItem>\r\n        <ListItemAvatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={props.todo.todo} secondary=\"Dummy Deadline\"/>\r\n           </ListItem> \r\n          <button onClick={e => setOpen(true) }>Edit</button>\r\n           <DeleteForeverIcon cursor=\"pointer\" onClick={event => db.collection('todos').doc(props.todo.id).delete() } />\r\n        </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import { useState,useEffect } from 'react';\nimport {Button,FormControl,Input,InputLabel} from '@material-ui/core';\nimport './App.css';\nimport Todo from \"./Todo.js\";\nimport db from './firebase.js';\nimport firebase from 'firebase';\nfunction App() {\n\n  const [todos,setTodos] = useState([]);\n  const [input,setInput] = useState('');\n  useEffect(()=>{\n   db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n     setTodos(snapshot.docs.map(doc => ({id:doc.id,todo:doc.data().todo})))\n\n   })\n  },[]);\n  const addTodo = (event) => {\n    event.preventDefault();\n    db.collection('todos').add({\n      todo : input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n    <h1>Add ToDo!!</h1>\n    <FormControl>\n  <InputLabel htmlFor=\"my-input\">Add ToDo</InputLabel>\n  <Input value={input} onChange={event => setInput(event.target.value)} />\n  <Button disabled={!input} variant=\"contained\" onClick={addTodo} color=\"primary\">\n  Add ToDo\n</Button>\n</FormControl>\n  \n    <ul>\n      {todos.map(todo => (\n        <Todo todo={todo} />\n      ))}\n    </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}